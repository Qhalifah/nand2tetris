function Hangman.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 150
pop this 0
push constant 6
pop this 1
push constant 0
pop this 2
push pointer 0
return
function Hangman.drawNextBodyPart 0
push argument 0
pop pointer 0
push this 2
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push constant 140
push constant 20
call Screen.drawCircle 3
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push constant 140
push constant 18
call Screen.drawCircle 3
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
label IF_FALSE0
push this 2
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
push constant 160
push this 0
push constant 200
call Screen.drawLine 4
pop temp 0
label IF_FALSE1
push this 2
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
push constant 30
sub
push constant 180
push this 0
push constant 180
call Screen.drawLine 4
pop temp 0
label IF_FALSE2
push this 2
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 0
push constant 180
push this 0
push constant 30
add
push constant 180
call Screen.drawLine 4
pop temp 0
label IF_FALSE3
push this 2
push constant 5
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 0
push constant 30
sub
push constant 230
push this 0
push constant 200
call Screen.drawLine 4
pop temp 0
label IF_FALSE4
push this 2
push constant 6
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 0
push constant 200
push this 0
push constant 30
add
push constant 230
call Screen.drawLine 4
pop temp 0
label IF_FALSE5
push constant 0
return
function Hangman.addPart 0
push argument 0
pop pointer 0
push this 2
push constant 1
add
pop this 2
push pointer 0
call Hangman.drawNextBodyPart 1
pop temp 0
push this 2
push this 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
label IF_FALSE0
push constant 0
return
